# -*- coding: utf-8 -*-
"""medical diagnosis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xOyVpIEjmsZG7o1GVLokBdm1-5Q7_Ss2
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
df=pd.read_csv("disease.csv")

df.head()

for i in ['Fever', 'Cough', 'Fatigue', 'Difficulty Breathing']:
    df[i] = df[i].replace({'Yes':1,'No':0})
for i in ['Blood Pressure', 'Cholesterol Level']:
    df[i] = df[i].replace({'Low':1,'Normal':2,'High':3})
df['Outcome Variable'] = df['Outcome Variable'].replace({'Positive':1,'Negative':0})
df['Gender'] = df['Gender'].replace({'Male':1,'Female':0})

df.head()

MinModel=MinMaxScaler()
df[['Age']] = MinModel.fit_transform(df[['Age']])

df.head()

disease=df['Disease']
df=df.drop('Disease',axis='columns')

x=df.drop('Outcome Variable',axis='columns')

y=df['Outcome Variable']

x

y

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.8,random_state=40)

from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier

Decision_model=DecisionTreeClassifier()
RF_model=RandomForestClassifier()

Decision_model.fit(x_train,y_train)

from sklearn.metrics import accuracy_score,precision_score,f1_score

y_pred=Decision_model.predict(x_test)
print("accuracy = ",accuracy_score(y_train,y_pred))